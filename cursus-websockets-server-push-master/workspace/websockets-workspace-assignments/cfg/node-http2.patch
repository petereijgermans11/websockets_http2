diff --git a/example/client.js b/example/client.js
old mode 100644
new mode 100755
index 89ad8a4..66ebc3f
--- a/example/client.js
+++ b/example/client.js
@@ -12,7 +12,7 @@ process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0";
 // It would be `var request = http2.get(process.argv.pop());` if we wouldn't care about plain mode
 var options = require('url').parse(process.argv.pop());
 options.plain = Boolean(process.env.HTTP2_PLAIN);
-var request = http2.request(options);
+var request = options.plain ? http2.raw.request(options) : http2.request(options);
 request.end();

 // Receiving the response
diff --git a/example/server.js b/example/server.js
old mode 100644
new mode 100755
index 73cdd6b..b854edd
--- a/example/server.js
+++ b/example/server.js
@@ -17,7 +17,7 @@ var cachedFile = fs.readFileSync(path.join(__dirname, './server.js'));
 var cachedUrl = '/server.js';

 // Creating the server
-var server = http2.createServer(options, function(request, response) {
+var callback = function(request, response) {
   var filename = path.join(__dirname, request.url);

   // Serving server.js from cache. Useful for microbenchmarks.
@@ -44,6 +44,7 @@ var server = http2.createServer(options, function(request, response) {
     response.writeHead('404');
     response.end();
   }
-});
+};
+var server =  options.plain ? http2.raw.createServer(options, callback) : http2.createServer(options, callback);

 server.listen(process.env.HTTP2_PORT || 8080);

